input CreateNewsInput {
  title: NewsTitle!
  contents: String!
  closed_at: Date
}

input UpdateNewsInput {
  title: NewsTitle
  contents: String
  closed_at: Date
}

input CreateHorseEntryInput {
  frame: NaturalNumber!
  number: NaturalNumber!
  horse_id: ID!
  jockey_id: ID!
  race_id: ID!
}

input UpdateHorseEntryInput {
  frame: NaturalNumber
  number: NaturalNumber
  horse_id: ID
  jockey_id: ID
  race_id: ID
}

input CreateRaceInput {
  name: RaceName!
  date: Date!
  order: NaturalNumber!
  course: CourseType!
  distance: NaturalNumber!
  horses: [CreateHorseEntryInput!]!
}

input UpdateHorseEntryTuple {
  id: ID!
  input: UpdateHorseEntryInput!
}

input UpdateRaceInput {
  name: RaceName
  date: Date
  order: NaturalNumber
  course: CourseType
  distance: NaturalNumber
  horses: [UpdateHorseEntryTuple!]
}

input CreateHorseInput {
  name: HorseName!
}

input UpdateHorseInput {
  name: HorseName
}

input CreateJockeyInput {
  name: JockeyName!
}

input UpdateJockeyInput {
  name: JockeyName
}

type Mutation {
  createNews(input: CreateNewsInput!): News!
  updateNews(id: ID!, input: UpdateNewsInput!): News!
  deleteNews(id: ID!): ID!

  createRace(input: CreateRaceInput!): Race!
  updateRace(id: ID!, input: UpdateRaceInput!): Race!
  deleteRace(id: ID!): ID!

  createHorseEntry(input: CreateHorseEntryInput!): HorseEntry!
  updateHorseEntry(id: ID!, input: UpdateHorseEntryInput!): HorseEntry!
  deleteHorseEntry(id: ID!): ID!

  createHorse(input: CreateHorseInput!): Horse!
  updateHorse(id: ID!, input: UpdateHorseInput!): Horse!
  deleteHorse(id: ID!): ID!

  createJockey(input: CreateJockeyInput!): Jockey!
  updateJockey(id: ID!, input: UpdateJockeyInput!): Jockey!
  deleteJockey(id: ID!): ID!
}
